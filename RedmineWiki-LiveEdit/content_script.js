// Generated by CoffeeScript 1.11.1
(function() {
  var url;

  url = location.href;

  if (/redmine/.test(url) && (/\/edit$/.test(url) || /\/edit\?.+$/.test(url))) {
    chrome.extension.sendRequest({}, function(response) {});
    (function(document, xhr) {
      var LiveEdit, inlineCSS, liveEdit, styleSheet;
      styleSheet = document.createElement("style");
      inlineCSS = ".jstEditor { overflow: hidden; float: none; display: inline-block; } #content_text { box-sizing: border-box; position: relative; float: left; width: 29.5vw; max-width: 30vw; height: 89.5vh; max-height: 90vh; } #preview { float: right; width: 65.5vw; max-width: 66vw; height: 89.5vh; max-height: 90vh; overflow: scroll; } #preview fieldset { margin-top: 0; } #preview legend { display: none; }";
      LiveEdit = (function() {
        function LiveEdit() {
          this.form = document.getElementById("wiki_form");
          this.editor = document.getElementById("content_text");
          this.origPreview = document.getElementById("preview");
          this.preview = this.origPreview.cloneNode();
          this.keyTimerId = null;
          this.origValues = (function(_this) {
            return function(p) {
              var excuted, params, regex, target;
              target = p[p.length - 1].getElementsByTagName("a")[0];
              params = target.getAttribute("onclick");
              if (/^new\sajax\.updater/i.test(params)) {
                regex = /\(\'\w+\',\s\'(.+\/preview)\',\s.+encodeURIComponent\(\'(.+)\'\)/g;
                excuted = regex.exec(params);
                return {
                  url: excuted[1],
                  token: encodeURIComponent(excuted[2])
                };
              } else {
                regex = /\w+\(\"(.+\/preview)\"\,\s/g;
                excuted = regex.exec(params);
                return {
                  url: excuted[1],
                  token: _this.form.authenticity_token["value"]
                };
              }
            };
          })(this)(this.form.getElementsByTagName("p"));
          this.baseParams = (function(_this) {
            return function(i) {
              var input, params;
              input = _this.form.getElementsByTagName("input");
              params = [];
              while (i < input.length) {
                params.push(_this.serializer(input[i]));
                i++;
              }
              params.push("authenticity_token=" + _this.origValues.token);
              return params.join("&");
            };
          })(this)(0);
          this.initElement();
          this.observeKeyEvent();
        }

        LiveEdit.prototype.initElement = function() {
          this.editor.parentNode.appendChild(this.preview);
          this.origPreview.parentNode.removeChild(this.origPreview);
          styleSheet.innerText = inlineCSS;
          document.body.appendChild(styleSheet);
          return this.updatePreview();
        };

        LiveEdit.prototype.observeKeyEvent = function() {
          return this.editor.addEventListener("keyup", (function(_this) {
            return function() {
              clearTimeout(_this.keyTimerId);
              return _this.keyTimerId = setTimeout(function() {
                return _this.updatePreview();
              }, 1000);
            };
          })(this), false);
        };

        LiveEdit.prototype.serializer = function(element) {
          var key, val;
          key = encodeURIComponent(element["name"]).replace(/%20/g, "+");
          val = element["value"].replace(/(\r)?\n/g, "\r\n");
          val = encodeURIComponent(val).replace(/%20/g, "+");
          return key + "=" + val;
        };

        LiveEdit.prototype.updatePreview = function() {
          var callback, loader;
          loader = document.getElementById("ajax-indicator");
          callback = (function(_this) {
            return function() {
              _this.editor.style.minHeight = _this.preview.offsetHeight + "px";
              return loader.style.display = "none";
            };
          })(this);
          return (function(_this) {
            return function(textContent) {
              xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                  _this.preview.innerHTML = xhr.responseText;
                  return callback();
                } else {
                  return loader.style.display = "block";
                }
              };
              xhr.open("post", _this.origValues.url, true);
              xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
              return xhr.send(_this.baseParams + "&" + textContent);
            };
          })(this)(this.serializer(this.editor));
        };

        return LiveEdit;

      })();
      return liveEdit = new LiveEdit();
    })(this.document, new XMLHttpRequest());
  }

}).call(this);
